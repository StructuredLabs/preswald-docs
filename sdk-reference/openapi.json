{
  "openapi": "3.0.1",
  "info": {
    "title": "Preswald SDK API",
    "description": "API specification for the Preswald SDK, detailing core functions like Markdown rendering, data connections, interactive components, and data visualization.",
    "version": "1.0.0",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "paths": {
    "/text": {
      "post": {
        "summary": "Render Markdown",
        "description": "Parses and renders Markdown content into HTML.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "markdown": {
                    "type": "string",
                    "description": "The Markdown string to render."
                  }
                },
                "required": ["markdown"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Rendered HTML content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "<h1>Welcome to Preswald</h1>"
                }
              }
            }
          }
        }
      }
    },
    "/connect": {
      "post": {
        "summary": "Connect to Data",
        "description": "Creates a connection to a data source such as CSV, JSON, Parquet, or a database.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "source": {
                    "type": "string",
                    "description": "Path to the data file or database connection string."
                  },
                  "name": {
                    "type": "string",
                    "description": "Optional name for the connection."
                  }
                },
                "required": ["source"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Connection created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "connection_name"
                }
              }
            }
          }
        }
      }
    },
    "/view": {
      "post": {
        "summary": "Render Data View",
        "description": "Renders an interactive table for the specified data connection.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "connection_name": {
                    "type": "string",
                    "description": "Name of the data connection."
                  },
                  "limit": {
                    "type": "integer",
                    "description": "Maximum number of rows to display."
                  }
                },
                "required": ["connection_name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Rendered interactive table.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "<table><tr><th>Name</th><th>Age</th></tr></table>"
                }
              }
            }
          }
        }
      }
    },
    "/components": {
      "post": {
        "summary": "Create UI Component",
        "description": "Creates a specified UI component.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of component (e.g., TextInput, Slider, Checkbox)."
                  },
                  "props": {
                    "type": "object",
                    "description": "Properties for the component."
                  }
                },
                "required": ["type", "props"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "HTML string of the created component.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "<input type='text' placeholder='Enter your name'>"
                }
              }
            }
          }
        }
      }
    },
    "/plotly": {
      "post": {
        "summary": "Render Plotly Visualization",
        "description": "Renders a Plotly visualization.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "plot_data": {
                    "type": "object",
                    "description": "Plotly data and configuration."
                  }
                },
                "required": ["plot_data"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Rendered Plotly visualization.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "<div>Plotly Visualization HTML</div>"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "MarkdownRequest": {
        "type": "object",
        "properties": {
          "markdown": {
            "type": "string",
            "description": "Markdown string to render."
          }
        },
        "required": ["markdown"]
      },
      "ConnectionRequest": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string",
            "description": "Path or connection string."
          },
          "name": {
            "type": "string",
            "description": "Optional connection name."
          }
        },
        "required": ["source"]
      },
      "ComponentRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of component."
          },
          "props": {
            "type": "object",
            "description": "Component properties."
          }
        },
        "required": ["type", "props"]
      }
    }
  }
}
